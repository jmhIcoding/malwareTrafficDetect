#pragma once
#include <windows.h>
#include "define.h"
#include <time.h>
class IPC_MemoryMap
{
public:
	IPC_MemoryMap(char *mapFile_name=MAPFILENAME)
	{
		void * pfile = CreateFile(LPCSTR(mapFile_name),GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ|FILE_SHARE_WRITE, 0, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0);
		void * fmaping = CreateFileMapping(pfile, NULL, PAGE_READWRITE, 0, max_map_size, LPCSTR(tag_name));
		printf("%d\n", GetLastError()); 
		map_file_point = MapViewOfFile(fmaping,FILE_MAP_WRITE, 0, 0, max_map_size);
		if (map_file_point == NULL)
		{
			printf("OS Error With Code %d\n", GetLastError());
			system("pause");
			exit(-1);
		}
	}
	~IPC_MemoryMap()
	{
		if (map_file_point)
		{
			UnmapViewOfFile(map_file_point);
		}
	}
	char & operator[](int index)
	{
		if (index < max_map_size)
		{
			return ((char*)map_file_point)[index];
		}
		else
		{
			printf("Internal Error. map_file_point out of range.\n");
			system("pause");
			exit(-1);
		}
	}
private:
	void * map_file_point;
};

